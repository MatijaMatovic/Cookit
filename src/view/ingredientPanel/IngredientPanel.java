/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.ingredientPanel;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JLabel;

/**
 *
 * @author Jovana
 */
public class IngredientPanel extends javax.swing.JPanel {
     
    private final GridBagConstraints c;
    private int i = -1;
    private int j = 0;
    private final int width;
    private int tmp;
    private final Set<String> ingredients =  new HashSet<String>();

    /**
     * Creates new form IngredientPanel
     */
    public IngredientPanel() {
        initComponents();
        this.setLayout(new GridBagLayout());

        c = new GridBagConstraints();
        c.anchor = GridBagConstraints.NORTHWEST;
        width = (int) (Toolkit.getDefaultToolkit().getScreenSize().getWidth()/3);
        tmp = width;
        
    }
    
    public void init(String ingredient){
 
        JLabel tl = new JLabel(ingredient);
        tl.setFont(new Font("", Font.PLAIN, 10));
        
        CheckBox jcb = new CheckBox(ingredient);
        jcb.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(jcb.isSelected()){
                    //JOptionPane.showMessageDialog(null, "yyy");
                    ingredients.add(jcb.getLabel());
                }else{
                    ingredients.remove(jcb.getLabel());
                } 
            }
            });
        jcb.setBackground(Color.white);
        tmp = tmp - ingredient.length()*5-25 ;
        if(tmp<=0)
        {
            tmp = width;
            i =0;
            j = j+1;
        }
        else
            i++;

        c.gridx = i;
        c.gridy = j;
        c.anchor = GridBagConstraints.FIRST_LINE_END;
        
        if(ingredient.length() > 10)
        {
            c.gridwidth = 2;
            i++;
        }
        
        this.add(tl, c);
        i++;
        
        c.anchor = GridBagConstraints.FIRST_LINE_START;
        c.gridwidth = 1;
        c.gridx = i;
        c.gridy = j;
        this.add(jcb, c);
    
    }

    public Set<String> getIngredients(){
        return ingredients;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new Dimension((int)(Toolkit.getDefaultToolkit().getScreenSize().getWidth()/3)-20,32767));
        setMinimumSize(new Dimension((int)(Toolkit.getDefaultToolkit().getScreenSize().getWidth()/3)-20,0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
