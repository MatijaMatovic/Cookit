/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.CreateRecipeWindow;

import java.util.HashSet;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author isidora
 */
public class CreateRecipeFrame extends javax.swing.JFrame {
    
    private DefaultListModel<String> ingredientModel;
    private CreateRecipeListener listener;
    private IngredientPickerListener ingredientListener;
    private DeleteIngredientListener deleteListener;

    /**
     * Creates new form ReceptKreiranje
     */
    public CreateRecipeFrame() {
        ingredientModel = new DefaultListModel<>();
        initComponents();
        ingredientsList.setComponentPopupMenu(ingredientPopupMenu);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ingredientPopupMenu = new javax.swing.JPopupMenu();
        editAmountMenuItem = new javax.swing.JMenuItem();
        deleteIngredient = new javax.swing.JMenuItem();
        addIngredientMenuItem = new javax.swing.JMenuItem();
        heading = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientsList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        textOfRecipe = new javax.swing.JTextArea();
        okay = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        ingredientPopupMenu.setToolTipText("");
        ingredientPopupMenu.setAlignmentY(0.0F);
        ingredientPopupMenu.setInvoker(ingredientsList);

        editAmountMenuItem.setText("Izmeni količinu");
        editAmountMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAmountMenuItemActionPerformed(evt);
            }
        });
        ingredientPopupMenu.add(editAmountMenuItem);

        deleteIngredient.setText("Ukloni sastojak");
        deleteIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteIngredientActionPerformed(evt);
            }
        });
        ingredientPopupMenu.add(deleteIngredient);

        addIngredientMenuItem.setText("Dodaj sastojak");
        addIngredientMenuItem.setToolTipText("");
        addIngredientMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addIngredientMenuItemActionPerformed(evt);
            }
        });
        ingredientPopupMenu.add(addIngredientMenuItem);
        addIngredientMenuItem.getAccessibleContext().setAccessibleName("");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pisanje recepta");
        setFont(new java.awt.Font("Comic Sans MS", 0, 10)); // NOI18N

        heading.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
        heading.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        heading.setText("Naslov recepta");

        ingredientsList.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        ingredientsList.setModel(ingredientModel);
        ingredientsList.setToolTipText("Potrebni sastojci");
        jScrollPane1.setViewportView(ingredientsList);

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        textOfRecipe.setColumns(20);
        textOfRecipe.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        textOfRecipe.setLineWrap(true);
        textOfRecipe.setRows(5);
        textOfRecipe.setText("Način pripremanja");
        jScrollPane3.setViewportView(textOfRecipe);

        okay.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        okay.setText("Potvrda");
        okay.setFocusPainted(false);
        okay.setMaximumSize(new java.awt.Dimension(85, 25));
        okay.setMinimumSize(new java.awt.Dimension(85, 25));
        okay.setPreferredSize(new java.awt.Dimension(85, 25));
        okay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okayActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        cancel.setText("Odustanak");
        cancel.setMaximumSize(new java.awt.Dimension(85, 25));
        cancel.setMinimumSize(new java.awt.Dimension(85, 25));
        cancel.setPreferredSize(new java.awt.Dimension(85, 25));
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(heading)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(okay, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setListener(CreateRecipeListener listener) {
        this.listener = listener;
    }

    public void setIngredientListener(IngredientPickerListener ingredientListener) {
        this.ingredientListener = ingredientListener;
    }

    public void setDeleteListener(DeleteIngredientListener deleteListener) {
        this.deleteListener = deleteListener;
    }

    private void okayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okayActionPerformed
        if (listener == null)
            return;
        
        String name = heading.getText();
        String text = textOfRecipe.getText();
        Set<String> ingredients = new HashSet<>(); //Ingredient is in the format name <val> unit (brasno 100 g)
        for (int i = 0; i < ingredientModel.getSize(); i++)
            ingredients.add(ingredientModel.getElementAt(i));
        
        CreateRecipeEvent ev = new CreateRecipeEvent(name, text, ingredients, this);
        listener.createRecipeEventEmitted(ev);
    }//GEN-LAST:event_okayActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void editAmountMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAmountMenuItemActionPerformed
        ingredientListener.ingredientPickerEventEmitted(new IngredientPickerEvent(true, this));
    }//GEN-LAST:event_editAmountMenuItemActionPerformed

    private void deleteIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteIngredientActionPerformed
        deleteListener.deleteIngredientEventEmitted(new DeleteIngredientEvent(ingredientsList.getSelectedIndex(), this));
    }//GEN-LAST:event_deleteIngredientActionPerformed

    private void addIngredientMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addIngredientMenuItemActionPerformed
        ingredientListener.ingredientPickerEventEmitted(new IngredientPickerEvent(false, this));
    }//GEN-LAST:event_addIngredientMenuItemActionPerformed
    
    public void editIngredient(String string) {
        int koji = ingredientsList.getSelectedIndex();
        ingredientModel.setElementAt(string, koji);
    }
    
    public void deleteIngredient(){
        int koji = ingredientsList.getSelectedIndex();
        ingredientModel.remove(koji);
    }
    
    public void addIngredient(String ingr){
        ingredientModel.addElement(ingr);
    }

    public DefaultListModel<String> getIngredientModel() {
        return ingredientModel;
    }

    public JList<String> getIngredientsList() {
        return ingredientsList;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateRecipeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateRecipeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateRecipeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateRecipeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateRecipeFrame().setVisible(true);
          }
        });
    }
    
    //private javax.swing.DefaultListModel ingrModel;
    //private Paint borderPaint;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addIngredientMenuItem;
    private javax.swing.JButton cancel;
    private javax.swing.JMenuItem deleteIngredient;
    private javax.swing.JMenuItem editAmountMenuItem;
    private javax.swing.JTextField heading;
    private javax.swing.JPopupMenu ingredientPopupMenu;
    private javax.swing.JList<String> ingredientsList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton okay;
    private javax.swing.JTextArea textOfRecipe;
    // End of variables declaration//GEN-END:variables

    
}
